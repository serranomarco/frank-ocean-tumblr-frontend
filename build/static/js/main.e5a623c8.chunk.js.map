{"version":3,"sources":["EndlessContext.js","config.js","Login.js","Register.js","NavBar.js","PostBar.js","Posts.js","Feed.js","routesUtil.js","App.js","AppWithContext.js","index.js"],"names":["EndlessContext","React","createContext","baseUrl","process","Login","useContext","login","username","useState","loggedIn","setLoggedIn","email","setEmail","password","setPassword","handleLogin","e","a","preventDefault","fetch","method","headers","body","JSON","stringify","response","ok","json","console","log","token","user","id","userName","to","className","type","onSubmit","placeholder","value","onChange","target","Register","setUserName","handleRegister","NavBar","href","style","fontSize","PostBar","authToken","title","setTitle","text","setText","quote","setQuote","source","setSource","handleTextPost","postTypeId","postId","Number","parseInt","post","res","textPost","window","location","reload","handleQuotePost","quotePost","onClick","document","querySelector","classList","remove","add","Posts","userId","likedPosts","setLikedPosts","posts","setPosts","setPostId","updateText","updateTitle","updateQuote","updateSource","handleLike","getAttribute","handleTextDelete","parentNode","deletePost","deleteTextPost","handleQuoteDelete","deleteQuotePost","handleTextModal","Texts","handleQuoteModal","Quotes","handleTextClose","handleQuoteClose","handleEditTextPost","handleEditQuotePost","updateLikedPosts","likedPostsArr","push","useEffect","sortedPosts","fetchData","map","includes","key","alt","src","User","profilePicPath","Feed","PrivateRoute","path","Component","component","needLogin","render","props","App","AppWithContext","localStorage","getItem","setAuthToken","setUserId","setUsername","setNeedLogin","Provider","setItem","ReactDOM","StrictMode","getElementById"],"mappings":"oRAEaA,EAAiBC,IAAMC,gB,uBCFvBC,EAAUC,gDCwDRC,EAnDD,WAAO,IAAD,EACYC,qBAAWN,GAA/BO,EADQ,EACRA,MAAOC,EADC,EACDA,SADC,EAGgBC,oBAAS,GAHzB,mBAGTC,EAHS,KAGCC,EAHD,OAIUF,mBAAS,oBAJnB,mBAITG,EAJS,KAIFC,EAJE,OAKgBJ,mBAAS,YALzB,mBAKTK,EALS,KAKCC,EALD,KAOVC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DAChBD,EAAEE,iBADc,SAEOC,MAAM,GAAD,OAAIjB,EAAJ,oBAA+B,CACvDkB,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBb,QAAOE,eANC,YAEVY,EAFU,QASHC,GATG,iCAUOD,EAASE,OAVhB,OAUNA,EAVM,OAWZC,QAAQC,IAAIF,GACZrB,EAAMqB,EAAKG,MAAOH,EAAKI,KAAKC,GAAIL,EAAKI,KAAKE,UAC1CvB,GAAY,GAbA,4CAAH,sDAwBjB,OAAID,EAAiB,kBAAC,IAAD,CAAUyB,GAAE,WAAM3B,EAAN,WAE7B,0BAAM4B,UAAU,SACZ,yBAAKA,UAAU,cACX,wBAAIA,UAAU,QAAd,KACA,kBAAC,IAAD,CAASA,UAAU,UAAUD,GAAG,aAC5B,4BAAQC,UAAU,gBAAgBC,KAAK,UAAvC,cAIR,wBAAID,UAAU,SAAd,WACA,0BAAME,SAAUtB,EAAaoB,UAAU,eACnC,2BAAOA,UAAU,eAAeC,KAAK,OAAOE,YAAY,QAAQC,MAAO5B,EAAO6B,SAnBtE,SAAAxB,GAChBJ,EAASI,EAAEyB,OAAOF,UAmBV,2BAAOJ,UAAU,kBAAkBC,KAAK,WAAWE,YAAY,WAAWC,MAAO1B,EAAU2B,SAhBhF,SAAAxB,GACnBF,EAAYE,EAAEyB,OAAOF,UAgBb,4BAAQJ,UAAU,gBAAgBC,KAAK,UAAvC,YCYDM,EAzDE,WAAO,IAAD,EACSrC,qBAAWN,GAA/BO,EADW,EACXA,MAAOC,EADI,EACJA,SADI,EAGaC,oBAAS,GAHtB,mBAGZC,EAHY,KAGFC,EAHE,OAIaF,mBAAS,IAJtB,mBAIZyB,EAJY,KAIFU,EAJE,OAKOnC,mBAAS,IALhB,mBAKZG,EALY,KAKLC,EALK,OAMaJ,mBAAS,IANtB,mBAMZK,EANY,KAMFC,EANE,KAQb8B,EAAc,uCAAG,WAAO5B,GAAP,iBAAAC,EAAA,6DACnBD,EAAEE,iBADiB,SAEIC,MAAM,GAAD,OAAIjB,EAAJ,uBAAkC,CAC1DkB,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBS,WAAUtB,QAAOE,eANN,YAEbY,EAFa,QASNC,GATM,iCAUID,EAASE,OAVb,OAUTA,EAVS,OAWfrB,EAAMqB,EAAKG,MAAOH,EAAKI,KAAKC,GAAIL,EAAKI,KAAKE,UAC1CvB,GAAY,GAZG,4CAAH,sDA4BpB,OAAID,EAAiB,kBAAC,IAAD,CAAUyB,GAAE,WAAM3B,EAAN,WAE7B,0BAAM4B,UAAU,SACZ,yBAAKA,UAAU,cACX,wBAAIA,UAAU,QAAd,KACA,kBAAC,IAAD,CAASA,UAAU,UAAUD,GAAG,UAC5B,4BAAQC,UAAU,gBAAgBC,KAAK,UAAvC,YAIR,wBAAID,UAAU,SAAd,WACA,0BAAME,SAAUO,EAAgBT,UAAU,eACtC,2BAAOA,UAAU,eAAeC,KAAK,OAAOE,YAAY,WAAWC,MAAON,EAAUO,SAhBzE,SAAAxB,GACnB2B,EAAY3B,EAAEyB,OAAOF,UAgBb,2BAAOJ,UAAU,eAAeC,KAAK,OAAOE,YAAY,QAAQC,MAAO5B,EAAO6B,SAzBtE,SAAAxB,GAChBJ,EAASI,EAAEyB,OAAOF,UAyBV,2BAAOJ,UAAU,kBAAkBC,KAAK,WAAWE,YAAY,WAAWC,MAAO1B,EAAU2B,SAtBhF,SAAAxB,GACnBF,EAAYE,EAAEyB,OAAOF,UAsBb,4BAAQJ,UAAU,gBAAgBC,KAAK,UAAvC,e,mDCtCDS,EAbA,WACX,OACI,yBAAKV,UAAU,aACX,uBAAGW,KAAK,IAAIX,UAAU,cAAtB,WACA,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAiBY,MAAO,CAAEC,SAAU,IAAMb,UAAU,eACpD,kBAAC,IAAD,CAAgBY,MAAO,CAAEC,SAAU,IAAMb,UAAU,kBACnD,kBAAC,IAAD,CAAYY,MAAO,CAAEC,SAAU,IAAMb,UAAU,qB,mDC+KhDc,EApLC,WAAO,IAAD,EACc5C,qBAAWN,GAAnCmD,EADU,EACVA,UAAW3C,EADD,EACCA,SADD,EAEQC,mBAAS,IAFjB,mBAEX2C,EAFW,KAEJC,EAFI,OAGM5C,mBAAS,IAHf,mBAGX6C,EAHW,KAGLC,EAHK,OAKQ9C,mBAAS,IALjB,mBAKX+C,EALW,KAKJC,EALI,OAMUhD,mBAAS,IANnB,mBAMXiD,EANW,KAMHC,EANG,KAwBZC,EAAc,uCAAG,WAAO3C,GAAP,uBAAAC,EAAA,6DACnBD,EAAEE,iBADiB,SAGIC,MAAM,GAAD,OAAIjB,EAAJ,cAAyB,CACjDkB,OAAQ,OACRC,QAAS,CACL,cAAgB,UAAhB,OAA2B6B,GAC3B,eAAgB,oBAEpB5B,KAAMC,KAAKC,UAAU,CACjBoC,WAAY,MAVD,YAGbnC,EAHa,QAaNC,GAbM,iCAcID,EAASE,OAdb,OAcTA,EAdS,OAefkC,EAASC,OAAOC,SAASpC,EAAKqC,KAAKhC,IACnCJ,QAAQC,IAAIF,GAhBG,eAmBnBC,QAAQC,IAAIgC,GAnBO,UAoBD1C,MAAM,GAAD,OAAIjB,EAAJ,mBAA8B,CACjDkB,OAAQ,OACRC,QAAS,CACL,cAAgB,UAAhB,OAA2B6B,GAC3B,eAAgB,oBAEpB5B,KAAMC,KAAKC,UAAU,CACjBqC,SACAV,QACAE,OACAO,WAAY,MA9BD,aAoBbK,EApBa,QAiCXvC,GAjCW,kCAkCQuC,EAAItC,OAlCZ,QAkCTuC,EAlCS,OAmCftC,QAAQC,IAAIqC,GAnCG,QAqCnBC,OAAOC,SAASC,SArCG,4CAAH,sDAyCdC,EAAe,uCAAG,WAAOtD,GAAP,uBAAAC,EAAA,6DACpBD,EAAEE,iBADkB,SAGGC,MAAM,GAAD,OAAIjB,EAAJ,cAAyB,CACjDkB,OAAQ,OACRC,QAAS,CACL,cAAgB,UAAhB,OAA2B6B,GAC3B,eAAgB,oBAEpB5B,KAAMC,KAAKC,UAAU,CACjBoC,WAAY,MAVA,YAGdnC,EAHc,QAaPC,GAbO,iCAcGD,EAASE,OAdZ,OAcVA,EAdU,OAehBkC,EAASC,OAAOC,SAASpC,EAAKqC,KAAKhC,IACnCJ,QAAQC,IAAIF,GAhBI,eAmBpBC,QAAQC,IAAIgC,GAnBQ,UAoBF1C,MAAM,GAAD,OAAIjB,EAAJ,oBAA+B,CAClDkB,OAAQ,OACRC,QAAS,CACL,cAAgB,UAAhB,OAA2B6B,GAC3B,eAAgB,oBAEpB5B,KAAMC,KAAKC,UAAU,CACjBqC,SACAN,QACAE,SACAG,WAAY,MA9BA,aAoBdK,EApBc,QAiCZvC,GAjCY,kCAkCQuC,EAAItC,OAlCZ,QAkCV4C,EAlCU,OAmChB3C,QAAQC,IAAI0C,GAnCI,QAqCpBJ,OAAOC,SAASC,SArCI,4CAAH,sDAiErB,OACI,yBAAKlC,UAAU,uBACX,4BAAQA,UAAU,eAAeC,KAAK,SAASoC,QA1B/B,SAACxD,GACrBA,EAAEE,iBACYuD,SAASC,cAAc,eAC/BC,UAAUC,OAAO,wBAwBf,kBAAC,IAAD,CAAgB7B,MAAO,CAAEC,SAAU,IAAMb,UAAU,oBACnD,uBAAGH,GAAG,QAAN,SAEJ,4BAAQG,UAAU,eAAeC,KAAK,UAClC,kBAAC,IAAD,CAAiBW,MAAO,CAAEC,SAAU,IAAMb,UAAU,qBACpD,uBAAGH,GAAG,SAAN,UAEJ,4BAAQG,UAAU,eAAeC,KAAK,SAASoC,QAtB9B,SAACxD,GACtBA,EAAEE,iBACYuD,SAASC,cAAc,gBAC/BC,UAAUC,OAAO,yBAoBf,kBAAC,IAAD,CAAiB7B,MAAO,CAAEC,SAAU,IAAMb,UAAU,qBACpD,uBAAGH,GAAG,SAAN,UAEJ,yBAAKG,UAAU,iCAEX,0BAAMA,UAAU,kBAAkBE,SAAUsB,GACxC,6BACI,uBAAGxB,UAAU,YAAY5B,GACzB,2BAAO4B,UAAU,aAAaC,KAAK,OAAOE,YAAY,QAAQE,SA7I9D,SAACxB,GACjBoC,EAASpC,EAAEyB,OAAOF,WA8IN,6BACI,8BAAUJ,UAAU,YAAYC,KAAK,OAAOE,YAAY,iBAAiBE,SA5I1E,SAACxB,GAChBsC,EAAQtC,EAAEyB,OAAOF,WA6IL,yBAAKJ,UAAU,qBACX,4BAAQA,UAAU,gBAAgBC,KAAK,SAASoC,QA3C5C,SAACxD,GACrBA,EAAEE,iBACYuD,SAASC,cAAc,eAC/BC,UAAUE,IAAI,wBAwCJ,SACA,4BAAQ1C,UAAU,eAAeC,KAAK,UAAtC,WAIZ,yBAAKD,UAAU,mCACX,0BAAMA,UAAU,mBAAmBE,SAAUiC,GACzC,6BACI,uBAAGnC,UAAU,YAAY5B,GACzB,8BAAU4B,UAAU,cAAcC,KAAK,OAAOE,YAAY,QAAQE,SApJlE,SAACxB,GACjBwC,EAASxC,EAAEyB,OAAOF,WAqJN,yBAAKJ,UAAU,qBACX,0BAAMH,GAAG,SAAT,UACA,2BAAOG,UAAU,eAAeC,KAAK,OAAOE,YAAY,SAASE,SApJhE,SAACxB,GAClB0C,EAAU1C,EAAEyB,OAAOF,WAqJP,yBAAKJ,UAAU,qBACX,4BAAQA,UAAU,gBAAgBC,KAAK,SAASoC,QA/C3C,SAACxD,GACtBA,EAAEE,iBACYuD,SAASC,cAAc,gBAC/BC,UAAUE,IAAI,yBA4CJ,SACA,4BAAQ1C,UAAU,eAAeC,KAAK,UAAtC,a,6FC8GT0C,EAxRD,WAAO,IAAD,EACwBzE,qBAAWN,GAA3CmD,EADQ,EACRA,UAAW6B,EADH,EACGA,OAAQxE,EADX,EACWA,SADX,EAEoBC,mBAAS,IAF7B,mBAETwE,EAFS,KAEGC,EAFH,OAGUzE,mBAAS,IAHnB,mBAGT0E,EAHS,KAGFC,EAHE,OAIU3E,mBAAS,IAJnB,mBAIT2C,EAJS,KAIFC,EAJE,OAKQ5C,mBAAS,IALjB,mBAKT6C,EALS,KAKHC,EALG,OAMU9C,mBAAS,IANnB,mBAMT+C,EANS,KAMFC,EANE,OAOYhD,mBAAS,IAPrB,mBAOTiD,EAPS,KAODC,EAPC,OAQYlD,oBAAU,GARtB,mBAQTqD,EARS,KAQDuB,EARC,KAUVC,EAAa,SAACrE,GAChBsC,EAAQtC,EAAEyB,OAAOF,QAGf+C,EAAc,SAACtE,GACjBoC,EAASpC,EAAEyB,OAAOF,QAGhBgD,EAAc,SAACvE,GACjBwC,EAASxC,EAAEyB,OAAOF,QAGhBiD,EAAe,SAACxE,GAClB0C,EAAU1C,EAAEyB,OAAOF,QAGjBkD,EAAU,uCAAG,WAAOzE,GAAP,iBAAAC,EAAA,sDACTe,EAAKhB,EAAEyB,OAAOiD,aAAa,OAC3BjE,EAAWN,MAAM,GAAD,OAAIjB,EAAJ,sBAAyB8B,EAAzB,SAAoC,CACtDZ,OAAQ,OACRC,QAAS,CACL,cAAgB,UAAhB,OAA2B6B,OAGtBxB,IACID,EAASE,OAE1BwC,OAAOC,SAASC,SAXD,2CAAH,sDAeVsB,EAAgB,uCAAG,WAAO3E,GAAP,qBAAAC,EAAA,6DACfe,EAAKhB,EAAEyB,OAAOiD,aAAa,MAC3B1B,EAAOhD,EAAEyB,OAAOmD,WAAWA,WAAWA,WAC5C5E,EAAEE,iBAHmB,SAIIC,MAAM,GAAD,OAAIjB,EAAJ,sBAAyB8B,EAAzB,SAAoC,CAC9DZ,OAAQ,SACRC,QAAS,CACL,cAAgB,UAAhB,OAA2B6B,MAPd,cAIf2C,EAJe,gBAUQ1E,MAAM,GAAD,OAAIjB,EAAJ,sBAAyB8B,GAAM,CAC7DZ,OAAQ,SACRC,QAAS,CACL,cAAgB,UAAhB,OAA2B6B,MAbd,UAUf4C,EAVe,QAgBjBD,EAAWnE,GAhBM,kCAiBEmE,EAAWlE,OAjBb,2BAmBjBmE,EAAepE,GAnBE,kCAoBEoE,EAAenE,OApBjB,eAqBjBqC,EAAKY,SArBY,4CAAH,sDAyBhBmB,EAAiB,uCAAG,WAAO/E,GAAP,qBAAAC,EAAA,6DAChBe,EAAKhB,EAAEyB,OAAOiD,aAAa,MAC3B1B,EAAOhD,EAAEyB,OAAOmD,WAAWA,WAAWA,WAC5C5E,EAAEE,iBAHoB,SAIGC,MAAM,GAAD,OAAIjB,EAAJ,sBAAyB8B,EAAzB,UAAqC,CAC/DZ,OAAQ,SACRC,QAAS,CACL,cAAgB,UAAhB,OAA2B6B,MAPb,cAIhB2C,EAJgB,gBAUQ1E,MAAM,GAAD,OAAIjB,EAAJ,sBAAyB8B,GAAM,CAC9DZ,OAAQ,SACRC,QAAS,CACL,cAAgB,UAAhB,OAA2B6B,MAbb,UAUhB8C,EAVgB,QAgBlBH,EAAWnE,GAhBO,kCAiBCmE,EAAWlE,OAjBZ,2BAmBlBqE,EAAgBtE,GAnBE,kCAoBCsE,EAAgBrE,OApBjB,eAqBlBqC,EAAKY,SArBa,4CAAH,sDAyBjBqB,EAAe,uCAAG,WAAOjF,GAAP,mBAAAC,EAAA,6DACpBD,EAAEE,iBACIc,EAAKhB,EAAEyB,OAAOiD,aAAa,MAFb,SAGGvE,MAAM,GAAD,OAAIjB,EAAJ,sBAAyB8B,IAHjC,YAGdP,EAHc,QAIPC,GAJO,iCAKGD,EAASE,OALZ,OAKVA,EALU,OAMhByD,EAAUzD,EAAKqC,KAAKkC,MAAM,GAAGrC,QAC7BT,EAASzB,EAAKqC,KAAKkC,MAAM,GAAG/C,OAC5BG,EAAQ3B,EAAKqC,KAAKkC,MAAM,GAAG7C,MARX,QAUNoB,SAASC,cAAc,oBAC/BC,UAAUC,OAAO,2BAXH,4CAAH,sDAcfuB,EAAgB,uCAAG,WAAOnF,GAAP,mBAAAC,EAAA,6DACrBD,EAAEE,iBACIc,EAAKhB,EAAEyB,OAAOiD,aAAa,MAFZ,SAGEvE,MAAM,GAAD,OAAIjB,EAAJ,sBAAyB8B,IAHhC,YAGfP,EAHe,QAIRC,GAJQ,iCAKED,EAASE,OALX,OAKXA,EALW,OAMjByD,EAAUzD,EAAKqC,KAAKoC,OAAO,GAAGvC,QAC9BL,EAAS7B,EAAKqC,KAAKoC,OAAO,GAAG7C,OAC7BG,EAAU/B,EAAKqC,KAAKoC,OAAO,GAAG3C,QARb,QAUPgB,SAASC,cAAc,qBAC/BC,UAAUC,OAAO,4BAXF,4CAAH,sDAchByB,GAAkB,SAACrF,GACrBA,EAAEE,iBACYuD,SAASC,cAAc,oBAC/BC,UAAUE,IAAI,4BAGlByB,GAAmB,SAACtF,GACtBA,EAAEE,iBACYuD,SAASC,cAAc,qBAC/BC,UAAUE,IAAI,6BAGlB0B,GAAkB,uCAAG,WAAOvF,GAAP,SAAAC,EAAA,sEACAE,MAAM,GAAD,OAAIjB,EAAJ,sBAAyB2D,EAAzB,SAAwC,CAChEzC,OAAQ,MACRC,QAAS,CACL,cAAgB,UAAhB,OAA2B6B,GAC3B,eAAgB,oBAEpB5B,KAAMC,KAAKC,UAAU,CACjB2B,QACAE,WATe,yDAAH,sDAclBmD,GAAmB,uCAAG,WAAOxF,GAAP,SAAAC,EAAA,sEACDE,MAAM,GAAD,OAAIjB,EAAJ,sBAAyB2D,EAAzB,UAAyC,CACjEzC,OAAQ,MACRC,QAAS,CACL,cAAgB,UAAhB,OAA2B6B,GAC3B,eAAgB,oBAEpB5B,KAAMC,KAAKC,UAAU,CACjB+B,QACAE,aATgB,yDAAH,sDAcnBgD,GAAmB,SAACzB,GACtB,IADqC,EAC/B0B,EAAgB,GADe,cAEjB1B,GAFiB,IAErC,2BAAgC,CAAC,IAAtBE,EAAqB,QAC5BwB,EAAcC,KAAKzB,EAAMrB,SAHQ,8BAKrCoB,EAAcyB,IAqBlB,OAlBAE,qBAAU,WAAM,4CACZ,8BAAA3F,EAAA,sEAC2BE,MAAM,GAAD,OAAIjB,EAAJ,gCAAmC6E,GAAU,CACrE1D,QAAS,CACL,cAAgB,UAAhB,OAA2B6B,GAC3B,eAAgB,sBAJ5B,YACUzB,EADV,QAOiBC,GAPjB,gCAQ2BD,EAASE,OARpC,OAQcA,EARd,OASQwD,EAASxD,EAAKkF,aACdJ,GAAiB9E,EAAKqD,YAV9B,4CADY,uBAAC,WAAD,wBAcZ8B,KACD,CAAC/B,EAAQ7B,IAIRgC,EAAM6B,KAAI,SAAA/C,GAEN,GADApC,QAAQC,IAAImD,EAAWgC,SAAShD,EAAKhC,KACb,IAApBgC,EAAKJ,WACL,OACI,yBAAKzB,UAAU,YAAYH,GAAIgC,EAAKhC,GAAIiF,IAAKjD,EAAKhC,IAC9C,yBAAKG,UAAU,+BACX,yBAAKA,UAAU,oBAAoB+E,IAAI,cAAcC,IAAKnD,EAAKoD,KAAKC,kBAExE,yBAAKlF,UAAU,mBACX,yBAAKA,UAAU,kBAAkB5B,GACjC,yBAAK4B,UAAU,eAAe6B,EAAKkC,MAAM,GAAG/C,OAC5C,yBAAKhB,UAAU,cAAc6B,EAAKkC,MAAM,GAAG7C,MAC3C,yBAAKlB,UAAU,wBACX,4BAAQH,GAAIgC,EAAKhC,GAAIG,UAAU,oBAAoBC,KAAK,UACpD,kBAAC,IAAD,CAA+BW,MAAO,CAAEC,SAAU,IAAMb,UAAU,mBAEtE,4BAAQH,GAAIgC,EAAKhC,GAAIG,UAAU,oBAAoBC,KAAK,SAASoC,QAASiB,GACrET,EAAWgC,SAAShD,EAAKhC,IAAM,kBAAC,IAAD,CAAce,MAAO,CAAEC,SAAU,IAAMb,UAAU,gBAAmB,kBAAC,IAAD,CAA4BY,MAAO,CAAEC,SAAU,IAAMb,UAAU,gBAEvK,4BAAQH,GAAIgC,EAAKhC,GAAIG,UAAU,oBAAoBC,KAAK,SAASoC,QAASmB,GACtE,kBAAC,IAAD,CAAoB5C,MAAO,CAAEC,SAAU,IAAMb,UAAU,kBAE3D,4BAAQH,GAAIgC,EAAKhC,GAAIG,UAAU,oBAAoBC,KAAK,SAASoC,QAASyB,GACtE,kBAAC,IAAD,CAAkBlD,MAAO,CAAEC,SAAU,IAAMb,UAAU,iBAG7D,yBAAKA,UAAU,2CACX,0BAAMA,UAAU,mBACZ,6BACI,uBAAGA,UAAU,YAAY5B,GACzB,2BAAO4B,UAAU,aAAaI,MAAOY,EAAOf,KAAK,OAAOE,YAAY,QAAQE,SAAU8C,KAE1F,6BACI,8BAAUnD,UAAU,YAAYI,MAAOc,EAAMjB,KAAK,OAAOE,YAAY,iBAAiBE,SAAU6C,KAEpG,yBAAKlD,UAAU,qBACX,4BAAQA,UAAU,gBAAgBC,KAAK,SAASoC,QAAS6B,IAAzD,SACA,4BAAQlE,UAAU,eAAeH,GAAI6B,EAAQzB,KAAK,SAASoC,QAAS+B,IAApE,aAOrB,GAAwB,IAApBvC,EAAKJ,iBAET,GAAwB,IAApBI,EAAKJ,WACZ,OACI,yBAAKzB,UAAU,YAAY8E,IAAKjD,EAAKhC,IACjC,yBAAKG,UAAU,+BACX,yBAAKA,UAAU,oBAAoB+E,IAAI,cAAcC,IAAKnD,EAAKoD,KAAKC,kBAExE,yBAAKlF,UAAU,mBACX,yBAAKA,UAAU,kBAAkB5B,GACjC,yBAAK4B,UAAU,eAAe6B,EAAKoC,OAAO,GAAG7C,OAC7C,yBAAKpB,UAAU,gBAAgB6B,EAAKoC,OAAO,GAAG3C,QAC9C,yBAAKtB,UAAU,wBACX,4BAAQH,GAAIgC,EAAKhC,GAAIG,UAAU,oBAAoBC,KAAK,UACpD,kBAAC,IAAD,CAA+BW,MAAO,CAAEC,SAAU,IAAMb,UAAU,mBAEtE,4BAAQH,GAAIgC,EAAKhC,GAAIG,UAAU,oBAAoBC,KAAK,SAASoC,QAASiB,GACrET,EAAWgC,SAAShD,EAAKhC,IAAM,kBAAC,IAAD,CAAce,MAAO,CAAEC,SAAU,IAAMb,UAAU,gBAAmB,kBAAC,IAAD,CAA4BY,MAAO,CAAEC,SAAU,IAAMb,UAAU,gBAEvK,4BAAQH,GAAIgC,EAAKhC,GAAIG,UAAU,oBAAoBC,KAAK,SAASoC,QAASuB,GACtE,kBAAC,IAAD,CAAoBhD,MAAO,CAAEC,SAAU,IAAMb,UAAU,kBAE3D,4BAAQH,GAAIgC,EAAKhC,GAAIG,UAAU,oBAAoBC,KAAK,SAASoC,QAAS2B,GACtE,kBAAC,IAAD,CAAkBpD,MAAO,CAAEC,SAAU,IAAMb,UAAU,iBAG7D,yBAAKA,UAAU,6CACX,0BAAMA,UAAU,oBACZ,6BACI,uBAAGA,UAAU,YAAY5B,GACzB,8BAAU4B,UAAU,cAAcI,MAAOgB,EAAOnB,KAAK,OAAOE,YAAY,QAAQE,SAAU+C,KAE9F,6BACI,2BAAOpD,UAAU,eAAeI,MAAOkB,EAAQrB,KAAK,OAAOE,YAAY,SAASE,SAAUgD,KAE9F,yBAAKrD,UAAU,qBACX,4BAAQA,UAAU,gBAAgBC,KAAK,SAASoC,QAAS8B,IAAzD,SACA,4BAAQnE,UAAU,eAAeH,GAAI6B,EAAQzB,KAAK,SAASoC,QAASgC,IAApE,iBCrQzBc,EAVF,WACT,OACI,8BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCPCC,EAAe,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAiBC,EAA2B,EAAtCC,UAAsBC,EAAgB,EAAhBA,UACvD,OACI,kBAAC,IAAD,CAAOH,KAAMA,EAAMI,OAAQ,SAAAC,GAAK,OAAkB,IAAdF,EAAqB,kBAAC,IAAD,CAAUzF,GAAG,WAAc,kBAACuF,EAAD,UCmB7EK,MAff,WAAgB,IAAD,EACmBzH,qBAAWN,GAAnC4H,EADK,EACLA,UAAWpH,EADN,EACMA,SAEnB,OADAqB,QAAQC,IAAI8F,GAEV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOH,KAAK,SAASE,UAAWtH,IAChC,kBAAC,IAAD,CAAOoH,KAAK,YAAYE,UAAWhF,IACnC,kBAAC,EAAD,CAAc8E,KAAI,WAAMjH,EAAN,SAAuBmH,UAAWJ,EAAMK,UAAWA,IACrE,kBAAC,EAAD,CAAcH,KAAI,IAAOE,UAAWJ,EAAMK,UAAWA,OCU9CI,EAxBQ,WAAO,IAAD,EACSvH,mBAASwH,aAAaC,QAAQ,wBADvC,mBAClB/E,EADkB,KACPgF,EADO,OAEG1H,mBAASwH,aAAaC,QAAQ,yBAFjC,mBAElBlD,EAFkB,KAEVoD,EAFU,OAGO3H,mBAASwH,aAAaC,QAAQ,2BAHrC,mBAGlB1H,EAHkB,KAGR6H,EAHQ,OAIS5H,oBAAUwH,aAAaC,QAAQ,wBAJxC,mBAIlBN,EAJkB,KAIPU,EAJO,KAiBzB,OACI,kBAACtI,EAAeuI,SAAhB,CAAyB/F,MAAO,CAAEjC,MAXxB,SAACwB,EAAOiD,EAAQxE,GAC1ByH,aAAaO,QAAQ,sBAAuBzG,GAC5CkG,aAAaO,QAAQ,uBAAwBxD,GAC7CiD,aAAaO,QAAQ,yBAA0BhI,GAC/C2H,EAAaF,aAAaC,QAAQ,wBAClCE,EAAUH,aAAaC,QAAQ,yBAC/BG,EAAYJ,aAAaC,QAAQ,2BACjCI,GAAa,IAI4BV,YAAWzE,YAAW3C,WAAUwE,WACrE,kBAAC,EAAD,QClBZyD,IAASZ,OACP,kBAAC,IAAMa,WAAP,KACE,kBAAC,EAAD,OAEFhE,SAASiE,eAAe,W","file":"static/js/main.e5a623c8.chunk.js","sourcesContent":["import React from 'react';\n\nexport const EndlessContext = React.createContext();\n","export const baseUrl = process.env.REACT_APP_BASEURL || 'http://localhost:8080'\n","import React, { useContext, useState } from 'react'\nimport { Redirect, NavLink } from 'react-router-dom';\nimport { EndlessContext } from './EndlessContext';\nimport { baseUrl } from './config';\n\nconst Login = () => {\n    const { login, username } = useContext(EndlessContext);\n\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [email, setEmail] = useState('demo@example.com');\n    const [password, setPassword] = useState('password');\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        const response = await fetch(`${baseUrl}/api/users/token`, {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                email, password\n            })\n        });\n        if (response.ok) {\n            const json = await response.json();\n            console.log(json)\n            login(json.token, json.user.id, json.user.userName);\n            setLoggedIn(true);\n        }\n    }\n\n    const updateEmail = e => {\n        setEmail(e.target.value);\n    }\n\n    const updatePassword = e => {\n        setPassword(e.target.value);\n    }\n    if (loggedIn) return <Redirect to={`/${username}/blog`} />\n    return (\n        <main className='login'>\n            <nav className='login__nav'>\n                <h1 className='logo'>e</h1>\n                <NavLink className='navlink' to='/register'>\n                    <button className='login__button' type='submit'>Register</button>\n                </NavLink>\n\n            </nav>\n            <h1 className='title'>endless</h1>\n            <form onSubmit={handleLogin} className='login__form'>\n                <input className='login__email' type='text' placeholder='Email' value={email} onChange={updateEmail} />\n                <input className='login__password' type='password' placeholder='Password' value={password} onChange={updatePassword} />\n                <button className='login__button' type='submit'>Login</button>\n            </form>\n        </main >\n    );\n}\n\nexport default Login;\n","import React, { useContext, useState } from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { EndlessContext } from './EndlessContext';\nimport { baseUrl } from './config'\n\nconst Register = () => {\n    const { login, username } = useContext(EndlessContext);\n\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [userName, setUserName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleRegister = async (e) => {\n        e.preventDefault();\n        const response = await fetch(`${baseUrl}/api/users/register`, {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                userName, email, password\n            })\n        });\n        if (response.ok) {\n            const json = await response.json();\n            login(json.token, json.user.id, json.user.userName);\n            setLoggedIn(true);\n        }\n    }\n\n    const updateEmail = e => {\n        setEmail(e.target.value);\n    }\n\n    const updatePassword = e => {\n        setPassword(e.target.value);\n    }\n\n    const updateUserName = e => {\n        setUserName(e.target.value);\n    }\n\n    if (loggedIn) return <Redirect to={`/${username}/blog`} />\n    return (\n        <main className='login'>\n            <nav className='login__nav'>\n                <h1 className='logo'>e</h1>\n                <NavLink className='navlink' to='/login'>\n                    <button className='login__button' type='submit'>Log In</button>\n                </NavLink>\n\n            </nav>\n            <h1 className='title'>endless</h1>\n            <form onSubmit={handleRegister} className='login__form'>\n                <input className='login__email' type='text' placeholder='Username' value={userName} onChange={updateUserName} />\n                <input className='login__email' type='text' placeholder='Email' value={email} onChange={updateEmail} />\n                <input className='login__password' type='password' placeholder='Password' value={password} onChange={updatePassword} />\n                <button className='login__button' type='submit'>Register</button>\n            </form>\n        </main >\n    )\n}\n\nexport default Register;\n","import React from 'react';\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nconst NavBar = () => {\n    return (\n        <nav className='feed__nav'>\n            <a href='/' className='feed__logo'>endless</a>\n            <div className='feed__icons'>\n                <HomeRoundedIcon style={{ fontSize: 45 }} className='feed__home' />\n                <AccountBoxIcon style={{ fontSize: 45 }} className='feed__profile' />\n                <AddBoxIcon style={{ fontSize: 45 }} className='feed__profile' />\n            </div>\n        </nav>\n    )\n}\n\nexport default NavBar;\n","import React, { useState, useContext } from 'react';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\nimport { baseUrl } from './config';\nimport { EndlessContext } from './EndlessContext';\n\nconst PostBar = () => {\n    const { authToken, username } = useContext(EndlessContext);\n    const [title, setTitle] = useState('');\n    const [text, setText] = useState('');\n\n    const [quote, setQuote] = useState('');\n    const [source, setSource] = useState('');\n\n    const updateTitle = (e) => {\n        setTitle(e.target.value);\n    }\n\n    const updateText = (e) => {\n        setText(e.target.value);\n    }\n\n    const updateQuote = (e) => {\n        setQuote(e.target.value);\n    }\n\n    const updateSource = (e) => {\n        setSource(e.target.value);\n    }\n\n    const handleTextPost = async (e) => {\n        e.preventDefault();\n        let postId;\n        const response = await fetch(`${baseUrl}/api/posts`, {\n            method: 'post',\n            headers: {\n                'Authorization': `Bearer ${authToken}`,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                postTypeId: 1\n            })\n        });\n        if (response.ok) {\n            const json = await response.json()\n            postId = Number.parseInt(json.post.id)\n            console.log(json)\n\n        }\n        console.log(postId)\n        const res = await fetch(`${baseUrl}/api/posts/text`, {\n            method: 'post',\n            headers: {\n                'Authorization': `Bearer ${authToken}`,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                postId,\n                title,\n                text,\n                postTypeId: 1\n            })\n        });\n        if (res.ok) {\n            const textPost = await res.json();\n            console.log(textPost);\n        }\n        window.location.reload();\n\n    }\n\n    const handleQuotePost = async (e) => {\n        e.preventDefault();\n        let postId;\n        const response = await fetch(`${baseUrl}/api/posts`, {\n            method: 'post',\n            headers: {\n                'Authorization': `Bearer ${authToken}`,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                postTypeId: 3\n            })\n        });\n        if (response.ok) {\n            const json = await response.json()\n            postId = Number.parseInt(json.post.id)\n            console.log(json)\n\n        }\n        console.log(postId)\n        const res = await fetch(`${baseUrl}/api/posts/quote`, {\n            method: 'post',\n            headers: {\n                'Authorization': `Bearer ${authToken}`,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                postId,\n                quote,\n                source,\n                postTypeId: 3\n            })\n        });\n        if (res.ok) {\n            const quotePost = await res.json();\n            console.log(quotePost);\n        }\n        window.location.reload();\n\n    }\n\n    const handleTextModal = (e) => {\n        e.preventDefault();\n        const modal = document.querySelector('.modal-text');\n        modal.classList.remove('modal-text--hidden');\n    }\n\n    const handleTextClose = (e) => {\n        e.preventDefault();\n        const modal = document.querySelector('.modal-text');\n        modal.classList.add('modal-text--hidden');\n    }\n\n    const handleQuoteModal = (e) => {\n        e.preventDefault();\n        const modal = document.querySelector('.modal-quote');\n        modal.classList.remove('modal-quote--hidden');\n    }\n\n    const handleQuoteClose = (e) => {\n        e.preventDefault();\n        const modal = document.querySelector('.modal-quote');\n        modal.classList.add('modal-quote--hidden');\n    }\n\n    return (\n        <div className='post-bar__container'>\n            <button className='post__button' type='submit' onClick={handleTextModal}>\n                <TextFieldsIcon style={{ fontSize: 40 }} className='post__icon-text' />\n                <p id='text'>Text</p>\n            </button>\n            <button className='post__button' type='submit' >\n                <PhotoCameraIcon style={{ fontSize: 40 }} className='post__icon-photo' />\n                <p id='photo'>Photo</p>\n            </button>\n            <button className='post__button' type='submit' onClick={handleQuoteModal}>\n                <FormatQuoteIcon style={{ fontSize: 40 }} className='post__icon-quote' />\n                <p id='quote'>Quote</p>\n            </button>\n            <div className='modal-text modal-text--hidden'>\n\n                <form className='post__text-form' onSubmit={handleTextPost}>\n                    <div>\n                        <p className='username'>{username}</p>\n                        <input className='title-text' type='text' placeholder='Title' onChange={updateTitle} />\n                    </div>\n                    <div>\n                        <textarea className='text-text' type='text' placeholder='Your text here' onChange={updateText} />\n                    </div>\n                    <div className='button__container'>\n                        <button className='button__close' type='submit' onClick={handleTextClose}>Close</button>\n                        <button className='button__post' type='submit'>Post</button>\n                    </div>\n                </form>\n            </div>\n            <div className='modal-quote modal-quote--hidden'>\n                <form className='post__quote-form' onSubmit={handleQuotePost}>\n                    <div>\n                        <p className='username'>{username}</p>\n                        <textarea className='quote-quote' type='text' placeholder='Quote' onChange={updateQuote} />\n                    </div>\n                    <div className='source__container'>\n                        <span id='slash'>&#8211;</span>\n                        <input className='source-quote' type='text' placeholder='source' onChange={updateSource} />\n                    </div>\n                    <div className='button__container'>\n                        <button className='button__close' type='submit' onClick={handleQuoteClose}>Close</button>\n                        <button className='button__post' type='submit'>Post</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default PostBar;\n","import React, { useContext, useState, useEffect } from 'react';\nimport { baseUrl } from './config';\nimport { EndlessContext } from './EndlessContext';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nconst Posts = () => {\n    const { authToken, userId, username } = useContext(EndlessContext);\n    const [likedPosts, setLikedPosts] = useState([]);\n    const [posts, setPosts] = useState([]);\n    const [title, setTitle] = useState('');\n    const [text, setText] = useState('');\n    const [quote, setQuote] = useState('');\n    const [source, setSource] = useState('');\n    const [postId, setPostId] = useState(-1);\n\n    const updateText = (e) => {\n        setText(e.target.value);\n    }\n\n    const updateTitle = (e) => {\n        setTitle(e.target.value);\n    }\n\n    const updateQuote = (e) => {\n        setQuote(e.target.value);\n    }\n\n    const updateSource = (e) => {\n        setSource(e.target.value);\n    }\n\n    const handleLike = async (e) => {\n        const id = e.target.getAttribute('id')\n        const response = fetch(`${baseUrl}/api/posts/${id}/like`, {\n            method: 'post',\n            headers: {\n                'Authorization': `Bearer ${authToken}`\n            }\n        });\n        if (response.ok) {\n            const json = response.json();\n        }\n        window.location.reload()\n\n    }\n\n    const handleTextDelete = async (e) => {\n        const id = e.target.getAttribute('id');\n        const post = e.target.parentNode.parentNode.parentNode\n        e.preventDefault();\n        const deletePost = await fetch(`${baseUrl}/api/posts/${id}/text`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': `Bearer ${authToken}`\n            }\n        });\n        const deleteTextPost = await fetch(`${baseUrl}/api/posts/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': `Bearer ${authToken}`\n            }\n        });\n        if (deletePost.ok) {\n            const json = await deletePost.json();\n        }\n        if (deleteTextPost.ok) {\n            const json = await deleteTextPost.json();\n            post.remove();\n        }\n    }\n\n    const handleQuoteDelete = async (e) => {\n        const id = e.target.getAttribute('id');\n        const post = e.target.parentNode.parentNode.parentNode\n        e.preventDefault();\n        const deletePost = await fetch(`${baseUrl}/api/posts/${id}/quote`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': `Bearer ${authToken}`\n            }\n        });\n        const deleteQuotePost = await fetch(`${baseUrl}/api/posts/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': `Bearer ${authToken}`\n            }\n        });\n        if (deletePost.ok) {\n            const json = await deletePost.json();\n        }\n        if (deleteQuotePost.ok) {\n            const json = await deleteQuotePost.json();\n            post.remove();\n        }\n    }\n\n    const handleTextModal = async (e) => {\n        e.preventDefault();\n        const id = e.target.getAttribute('id');\n        const response = await fetch(`${baseUrl}/api/posts/${id}`);\n        if (response.ok) {\n            const json = await response.json();\n            setPostId(json.post.Texts[0].postId);\n            setTitle(json.post.Texts[0].title);\n            setText(json.post.Texts[0].text);\n        }\n        const modal = document.querySelector('.modal-text-edit');\n        modal.classList.remove('modal-text-edit--hidden');\n    }\n\n    const handleQuoteModal = async (e) => {\n        e.preventDefault();\n        const id = e.target.getAttribute('id');\n        const response = await fetch(`${baseUrl}/api/posts/${id}`);\n        if (response.ok) {\n            const json = await response.json();\n            setPostId(json.post.Quotes[0].postId);\n            setQuote(json.post.Quotes[0].quote);\n            setSource(json.post.Quotes[0].source);\n        }\n        const modal = document.querySelector('.modal-quote-edit');\n        modal.classList.remove('modal-quote-edit--hidden');\n    }\n\n    const handleTextClose = (e) => {\n        e.preventDefault();\n        const modal = document.querySelector('.modal-text-edit');\n        modal.classList.add('modal-text-edit--hidden');\n    }\n\n    const handleQuoteClose = (e) => {\n        e.preventDefault();\n        const modal = document.querySelector('.modal-quote-edit');\n        modal.classList.add('modal-quote-edit--hidden');\n    }\n\n    const handleEditTextPost = async (e) => {\n        const response = await fetch(`${baseUrl}/api/posts/${postId}/text`, {\n            method: 'put',\n            headers: {\n                'Authorization': `Bearer ${authToken}`,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                title,\n                text\n            })\n        });\n    }\n\n    const handleEditQuotePost = async (e) => {\n        const response = await fetch(`${baseUrl}/api/posts/${postId}/quote`, {\n            method: 'put',\n            headers: {\n                'Authorization': `Bearer ${authToken}`,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                quote,\n                source\n            })\n        });\n    }\n\n    const updateLikedPosts = (likedPosts) => {\n        const likedPostsArr = [];\n        for (const posts of likedPosts) {\n            likedPostsArr.push(posts.postId)\n        }\n        setLikedPosts(likedPostsArr);\n    }\n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch(`${baseUrl}/api/posts/following/${userId}`, {\n                headers: {\n                    'Authorization': `Bearer ${authToken}`,\n                    'Content-Type': 'application/json'\n                }\n            })\n            if (response.ok) {\n                const json = await response.json();\n                setPosts(json.sortedPosts);\n                updateLikedPosts(json.likedPosts);\n            }\n        }\n        fetchData();\n    }, [userId, authToken])\n\n\n    return (\n        posts.map(post => {\n            console.log(likedPosts.includes(post.id))\n            if (post.postTypeId === 1) {\n                return (\n                    <div className='container' id={post.id} key={post.id}>\n                        <div className='post__profile-pic-container'>\n                            <img className='post__profile-pic' alt='profile-pic' src={post.User.profilePicPath} />\n                        </div>\n                        <div className='post__container'>\n                            <div className='post__username'>{username}</div>\n                            <div className='post__title'>{post.Texts[0].title}</div>\n                            <div className='post__text'>{post.Texts[0].text}</div>\n                            <div className='post__icon-container'>\n                                <button id={post.id} className='text-post__button' type='submit'>\n                                    <ChatBubbleOutlineOutlinedIcon style={{ fontSize: 30 }} className='post__comment' />\n                                </button>\n                                <button id={post.id} className='text-post__button' type='submit' onClick={handleLike}>\n                                    {likedPosts.includes(post.id) ? <FavoriteIcon style={{ fontSize: 30 }} className='post__liked' /> : <FavoriteBorderOutlinedIcon style={{ fontSize: 30 }} className='post__like' />}\n                                </button>\n                                <button id={post.id} className='text-post__button' type='submit' onClick={handleTextDelete}>\n                                    <DeleteOutlinedIcon style={{ fontSize: 30 }} className='post__delete' />\n                                </button>\n                                <button id={post.id} className='text-post__button' type='submit' onClick={handleTextModal}>\n                                    <EditOutlinedIcon style={{ fontSize: 30 }} className='post__edit' />\n                                </button>\n                            </div>\n                            <div className='modal-text-edit modal-text-edit--hidden'>\n                                <form className='post__text-form'>\n                                    <div>\n                                        <p className='username'>{username}</p>\n                                        <input className='title-text' value={title} type='text' placeholder='Title' onChange={updateTitle} />\n                                    </div>\n                                    <div>\n                                        <textarea className='text-text' value={text} type='text' placeholder='Your text here' onChange={updateText} />\n                                    </div>\n                                    <div className='button__container'>\n                                        <button className='button__close' type='submit' onClick={handleTextClose}>Close</button>\n                                        <button className='button__post' id={postId} type='submit' onClick={handleEditTextPost}>Post</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div >\n                    </div>\n                )\n            } else if (post.postTypeId === 2) {\n                //manage photo post\n            } else if (post.postTypeId === 3) {\n                return (\n                    <div className='container' key={post.id}>\n                        <div className='post__profile-pic-container'>\n                            <img className='post__profile-pic' alt='profile-pic' src={post.User.profilePicPath} />\n                        </div>\n                        <div className='post__container'>\n                            <div className='post__username'>{username}</div>\n                            <div className='post__quote'>{post.Quotes[0].quote}</div>\n                            <div className='post__source'>{post.Quotes[0].source}</div>\n                            <div className='post__icon-container'>\n                                <button id={post.id} className='text-post__button' type='submit'>\n                                    <ChatBubbleOutlineOutlinedIcon style={{ fontSize: 30 }} className='post__comment' />\n                                </button>\n                                <button id={post.id} className='text-post__button' type='submit' onClick={handleLike}>\n                                    {likedPosts.includes(post.id) ? <FavoriteIcon style={{ fontSize: 30 }} className='post__liked' /> : <FavoriteBorderOutlinedIcon style={{ fontSize: 30 }} className='post__like' />}\n                                </button>\n                                <button id={post.id} className='text-post__button' type='submit' onClick={handleQuoteDelete}>\n                                    <DeleteOutlinedIcon style={{ fontSize: 30 }} className='post__delete' />\n                                </button>\n                                <button id={post.id} className='text-post__button' type='submit' onClick={handleQuoteModal}>\n                                    <EditOutlinedIcon style={{ fontSize: 30 }} className='post__edit' />\n                                </button>\n                            </div>\n                            <div className='modal-quote-edit modal-quote-edit--hidden'>\n                                <form className='post__quote-form'>\n                                    <div>\n                                        <p className='username'>{username}</p>\n                                        <textarea className='quote-quote' value={quote} type='text' placeholder='Quote' onChange={updateQuote} />\n                                    </div>\n                                    <div>\n                                        <input className='source-quote' value={source} type='text' placeholder='source' onChange={updateSource} />\n                                    </div>\n                                    <div className='button__container'>\n                                        <button className='button__close' type='submit' onClick={handleQuoteClose}>Close</button>\n                                        <button className='button__post' id={postId} type='submit' onClick={handleEditQuotePost}>Post</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div >\n                    </div>)\n            }\n\n        })\n    )\n\n}\n\nexport default Posts;\n","import React from 'react';\nimport NavBar from './NavBar';\nimport PostBar from './PostBar';\nimport Posts from './Posts'\n\nconst Feed = () => {\n    return (\n        <main>\n            <NavBar />\n            <PostBar />\n            <Posts />\n        </main>\n    );\n}\n\nexport default Feed;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({ path, component: Component, needLogin }) => {\n    return (\n        <Route path={path} render={props => needLogin === true ? <Redirect to='/login' /> : <Component />} />\n    );\n}\n","import React, { useContext } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { EndlessContext } from './EndlessContext';\nimport Login from './Login';\nimport Register from './Register'\nimport Feed from './Feed'\nimport { PrivateRoute } from './routesUtil';\n\nfunction App() {\n  const { needLogin, username } = useContext(EndlessContext);\n  console.log(needLogin);\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/login' component={Login} />\n        <Route path='/register' component={Register} />\n        <PrivateRoute path={`/${username}/blog`} component={Feed} needLogin={needLogin} />\n        <PrivateRoute path={`/`} component={Feed} needLogin={needLogin} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","import React, { useState } from 'react'\nimport App from './App'\nimport { EndlessContext } from './EndlessContext';\n\nconst AppWithContext = () => {\n    const [authToken, setAuthToken] = useState(localStorage.getItem('state-endless-token'));\n    const [userId, setUserId] = useState(localStorage.getItem('state-endless-userId'));\n    const [username, setUsername] = useState(localStorage.getItem('state-endless-username'));\n    const [needLogin, setNeedLogin] = useState(!localStorage.getItem('state-endless-token'));\n\n\n    const login = (token, userId, username) => {\n        localStorage.setItem('state-endless-token', token);\n        localStorage.setItem('state-endless-userId', userId);\n        localStorage.setItem('state-endless-username', username)\n        setAuthToken(localStorage.getItem('state-endless-token'));\n        setUserId(localStorage.getItem('state-endless-userId'))\n        setUsername(localStorage.getItem('state-endless-username'))\n        setNeedLogin(false);\n    }\n\n    return (\n        <EndlessContext.Provider value={{ login, needLogin, authToken, username, userId }}>\n            <App />\n        </EndlessContext.Provider>\n    )\n}\n\nexport default AppWithContext;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppWithContext from './AppWithContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppWithContext />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}